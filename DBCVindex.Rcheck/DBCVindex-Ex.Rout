
R version 4.3.1 (2023-06-16) -- "Beagle Scouts"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-conda-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "DBCVindex"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('DBCVindex')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("compute_pair_to_pair_dists")
> ### * compute_pair_to_pair_dists
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: compute_pair_to_pair_dists
> ### Title: Function to compute pairwise distances and ensure matrix format
> ### Aliases: compute_pair_to_pair_dists
> 
> ### ** Examples
> 
> 
> n = 300; noise = 0.05; seed = 1782;
> theta <- seq(0, pi, length.out = n / 2)
>  x1 <- cos(theta) + rnorm(n / 2, sd = noise)
>  y1 <- sin(theta) + rnorm(n / 2, sd = noise)
>  x2 <- cos(theta + pi) + rnorm(n / 2, sd = noise)
>  y2 <- sin(theta + pi) + rnorm(n / 2, sd = noise)
>  X <- rbind(cbind(x1, y1), cbind(x2, y2))
> 
> dist_matrix <- compute_pair_to_pair_dists(X)
> 
> 
> 
> cleanEx()
> nameEx("dbcv")
> ### * dbcv
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: dbcv
> ### Title: Function that calculates the Density-Based Clustering Validation
> ###   index (DBCV) of clustering results
> ### Aliases: dbcv
> 
> ### ** Examples
> 
> 
> n = 300; noise = 0.05; seed = 1782;
> theta <- seq(0, pi, length.out = n / 2)
>  x1 <- cos(theta) + rnorm(n / 2, sd = noise)
>  y1 <- sin(theta) + rnorm(n / 2, sd = noise)
>  x2 <- cos(theta + pi) + rnorm(n / 2, sd = noise)
>  y2 <- sin(theta + pi) + rnorm(n / 2, sd = noise)
>  X <- rbind(cbind(x1, y1), cbind(x2, y2))
>  y <- c(rep(0, n / 2), rep(1, n / 2))
> 
> cat("dbcv(X, y) = ", dbcv(X, y), "\n", sep="")
dbcv(X, y) = 0.9362619
> 
> 
> 
> cleanEx()
> nameEx("remove_duplicates")
> ### * remove_duplicates
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: remove_duplicates
> ### Title: Function to remove duplicate samples from the input data
> ### Aliases: remove_duplicates
> 
> ### ** Examples
> 
> 
> n = 300; noise = 0.05; seed = 1782;
> theta <- seq(0, pi, length.out = n / 2)
>  x1 <- cos(theta) + rnorm(n / 2, sd = noise)
>  y1 <- sin(theta) + rnorm(n / 2, sd = noise)
>  x2 <- cos(theta + pi) + rnorm(n / 2, sd = noise)
>  y2 <- sin(theta + pi) + rnorm(n / 2, sd = noise)
>  X <- rbind(cbind(x1, y1), cbind(x2, y2))
>  y <- c(rep(0, n / 2), rep(1, n / 2))
> 
> cat("remove_duplicates(X, y) = ")
remove_duplicates(X, y) = > print(remove_duplicates(X, y))
$X
                x1           y1
  [1,]  0.96867731  0.022509355
  [2,]  1.00895990  0.020154961
  [3,]  0.95732959  0.026253114
  [4,]  1.07776420  0.016743265
  [5,]  1.01292104  0.009865096
  [6,]  0.95342477  0.051467790
  [7,]  1.01638010  0.176171359
  [8,]  1.02604435  0.115993012
  [9,]  1.01459695  0.098656059
 [10,]  0.96677999  0.282088358
 [11,]  1.05344345  0.230541422
 [12,]  0.99271683  0.217923587
 [13,]  0.93710027  0.303247453
 [14,]  0.85193456  0.315000514
 [15,]  1.01299541  0.259952981
 [16,]  0.94815618  0.421326686
 [17,]  0.94282484  0.318238378
 [18,]  0.98363818  0.279586026
 [19,]  0.96990316  0.363255858
 [20,]  0.95051999  0.400353143
 [21,]  0.95834727  0.524702174
 [22,]  0.94267310  0.433738449
 [23,]  0.89806074  0.470252884
 [24,]  0.78523355  0.462301022
 [25,]  0.90566778  0.468007125
 [26,]  0.86145658  0.501303893
 [27,]  0.84567557  0.560531579
 [28,]  0.76875065  0.642789583
 [29,]  0.80682927  0.608035068
 [30,]  0.83971305  0.634451520
 [31,]  0.87446515  0.529625391
 [32,]  0.78874846  0.657258995
 [33,]  0.80027518  0.635662801
 [34,]  0.76485796  0.567628715
 [35,]  0.68501065  0.683082063
 [36,]  0.71909418  0.664840828
 [37,]  0.70578081  0.761456479
 [38,]  0.70785852  0.665065624
 [39,]  0.75083835  0.696689071
 [40,]  0.71869944  0.686404850
 [41,]  0.65671551  0.738040073
 [42,]  0.63637905  0.780848781
 [43,]  0.66771223  0.737675522
 [44,]  0.64423280  0.828952136
 [45,]  0.56522343  0.739849840
 [46,]  0.54728145  0.760319515
 [47,]  0.58362129  0.896880090
 [48,]  0.58630348  0.785766635
 [49,]  0.52450061  0.868522663
 [50,]  0.55617874  0.839858108
 [51,]  0.51380642  0.889988164
 [52,]  0.44485802  0.964181362
 [53,]  0.47386218  0.968895667
 [54,]  0.38148182  0.882453954
 [55,]  0.49055026  0.793771025
 [56,]  0.49868194  1.041545682
 [57,]  0.36188609  0.958238218
 [58,]  0.30845661  0.959762435
 [59,]  0.36940517  0.939422629
 [60,]  0.31427075  0.972576655
 [61,]  0.42106596  0.945410059
 [62,]  0.27885086  0.980797274
 [63,]  0.29500279  0.945457242
 [64,]  0.24150307  0.902237033
 [65,]  0.18241971  1.024985651
 [66,]  0.20840579  1.055993610
 [67,]  0.08801259  0.968546298
 [68,]  0.23075337  0.924858387
 [69,]  0.14428339  1.022735494
 [70,]  0.22433567  0.991048154
 [71,]  0.11851350  0.908841318
 [72,]  0.03823152  0.997384918
 [73,]  0.08322320  0.967096065
 [74,] -0.01508338  0.982451486
 [75,] -0.05213961  0.942115813
 [76,]  0.00403025  1.090101526
 [77,] -0.05378609  0.982943314
 [78,] -0.05263161  0.918335411
 [79,] -0.07001177  1.007137997
 [80,] -0.12421407  1.008661021
 [81,] -0.14413853  0.943992276
 [82,] -0.14337966  0.846177395
 [83,] -0.09857127  0.955498789
 [84,] -0.25443886  1.012508708
 [85,] -0.16926886  0.977020195
 [86,] -0.20293586  0.970684801
 [87,] -0.18694797  0.998788463
 [88,] -0.27572501  0.906146647
 [89,] -0.26231192  1.014601394
 [90,] -0.28763013  0.953361650
 [91,] -0.34814949  0.982436767
 [92,] -0.28052580  0.991797992
 [93,] -0.30264321  0.943870089
 [94,] -0.34523648  0.880949529
 [95,] -0.32032028  0.974810830
 [96,] -0.39097475  0.808024555
 [97,] -0.50177958  0.871759807
 [98,] -0.48546946  0.876782710
 [99,] -0.53668997  0.871431646
[100,] -0.51757116  0.920541267
[101,] -0.54314169  0.865723005
[102,] -0.52801213  0.868282308
[103,] -0.59342292  0.833076268
[104,] -0.55749075  0.812438988
[105,] -0.61538544  0.847496276
[106,] -0.51129685  0.857565397
[107,] -0.58056427  0.667278667
[108,] -0.58735535  0.802899908
[109,] -0.62983787  0.779484413
[110,] -0.58083289  0.725631885
[111,] -0.71232748  0.780260965
[112,] -0.71891932  0.698737800
[113,] -0.63921008  0.689153191
[114,] -0.75803012  0.731097603
[115,] -0.75021295  0.758759923
[116,] -0.77350402  0.670533671
[117,] -0.78354786  0.619882016
[118,] -0.79484726  0.565210897
[119,] -0.76917843  0.591512567
[120,] -0.81539770  0.544200096
[121,] -0.84411384  0.561109471
[122,] -0.76358483  0.576384405
[123,] -0.85301724  0.496434478
[124,] -0.86244317  0.653607943
[125,] -0.86927255  0.510840778
[126,] -0.83904317  0.541217531
[127,] -0.88837935  0.351702470
[128,] -0.89621420  0.484453002
[129,] -0.93764931  0.362636072
[130,] -0.92861192  0.455293438
[131,] -0.91781690  0.409882734
[132,] -0.95828683  0.350099409
[133,] -0.90987156  0.417023690
[134,] -1.01955406  0.295928146
[135,] -0.93507496  0.281990847
[136,] -1.03357135  0.240861525
[137,] -0.97771836  0.237270451
[138,] -0.99457630  0.297582549
[139,] -1.00582940  0.251541050
[140,] -0.98069923  0.259544364
[141,] -1.07776739  0.169117894
[142,] -0.92697872  0.186695916
[143,] -1.07237674  0.159264592
[144,] -1.01518516  0.054857052
[145,] -1.05024419  0.194148869
[146,] -1.03398660  0.090960495
[147,] -0.89364183  0.101491322
[148,] -0.99824124  0.089913366
[149,] -1.06409276  0.018554667
[150,] -1.08203028 -0.015290771
[151,] -0.95531631  0.048084832
[152,] -1.05214264 -0.051304239
[153,] -0.90054415 -0.079800396
[154,] -1.01718177 -0.140991952
[155,] -0.91373839 -0.156932799
[156,] -0.91883755 -0.102410813
[157,] -0.98786036 -0.100701449
[158,] -0.96076707 -0.251950494
[159,] -1.03703530 -0.218095500
[160,] -0.96589909 -0.161835241
[161,] -0.92567376 -0.231938257
[162,] -0.96827074 -0.121587517
[163,] -0.99086915 -0.188035967
[164,] -0.99545865 -0.240904480
[165,] -0.95854498 -0.290670911
[166,] -0.89694478 -0.297053523
[167,] -0.96783310 -0.366285036
[168,] -0.94249688 -0.319409901
[169,] -0.99354910 -0.296465140
[170,] -0.89610928 -0.335804731
[171,] -0.84700333 -0.449965467
[172,] -0.82871423 -0.509392173
[173,] -0.85359736 -0.452885729
[174,] -0.97819057 -0.444114200
[175,] -0.85057501 -0.417157468
[176,] -0.84145624 -0.568970668
[177,] -0.87113536 -0.502930370
[178,] -0.83376380 -0.527352341
[179,] -0.87393857 -0.496967683
[180,] -0.78485443 -0.575451598
[181,] -0.82288623 -0.609056505
[182,] -0.87234195 -0.665404923
[183,] -0.79926414 -0.650537585
[184,] -0.69932647 -0.659097405
[185,] -0.77057769 -0.539503210
[186,] -0.70320641 -0.550451990
[187,] -0.67816602 -0.696562278
[188,] -0.71060426 -0.755553096
[189,] -0.71345320 -0.816846405
[190,] -0.70702543 -0.706976743
[191,] -0.62796223 -0.801423950
[192,] -0.70222001 -0.646515226
[193,] -0.62055351 -0.818543809
[194,] -0.63087461 -0.781878156
[195,] -0.71290568 -0.609740145
[196,] -0.65309873 -0.868164235
[197,] -0.51959122 -0.809443874
[198,] -0.55744078 -0.891903732
[199,] -0.48995376 -0.830541245
[200,] -0.41774963 -0.902575137
[201,] -0.42020707 -0.865652916
[202,] -0.44159591 -0.894581130
[203,] -0.43780806 -0.948728357
[204,] -0.44758989 -0.898434710
[205,] -0.34000448 -0.858452750
[206,] -0.36985024 -0.836964230
[207,] -0.43892601 -0.993520473
[208,] -0.36844547 -0.945176615
[209,] -0.43686468 -0.882121379
[210,] -0.33078643 -1.002782351
[211,] -0.43060146 -1.080053885
[212,] -0.21511275 -1.006557670
[213,] -0.29229297 -1.013831552
[214,] -0.26160191 -0.968372997
[215,] -0.22804929 -0.995780578
[216,] -0.16835526 -0.968431552
[217,] -0.14434351 -1.005101947
[218,] -0.12907803 -0.968816955
[219,] -0.16524785 -1.008923718
[220,] -0.18386965 -0.933778539
[221,] -0.11417413 -1.032368615
[222,] -0.05983313 -0.982744993
[223,] -0.09384094 -1.042853560
[224,] -0.03506355 -0.989099591
[225,] -0.06892518 -1.002330940
[226,]  0.01012661 -1.084170463
[227,]  0.03806427 -1.006711243
[228,]  0.04539310 -0.939600399
[229,]  0.06553329 -0.963208329
[230,]  0.18291562 -0.988339857
[231,]  0.15383442 -1.052899433
[232,]  0.19219228 -0.932161996
[233,]  0.11131528 -0.983562789
[234,]  0.18647761 -1.006572014
[235,]  0.25670743 -0.897904948
[236,]  0.21675730 -1.014073354
[237,]  0.13363493 -0.955579379
[238,]  0.27775811 -0.901382708
[239,]  0.18556509 -0.929651402
[240,]  0.26042657 -0.968979964
[241,]  0.38722370 -0.967992139
[242,]  0.37170103 -0.922335829
[243,]  0.41524679 -0.907022012
[244,]  0.39557741 -0.923954539
[245,]  0.39415401 -0.850740154
[246,]  0.37268343 -0.911324402
[247,]  0.51759566 -0.934014148
[248,]  0.45905672 -0.862699938
[249,]  0.43970292 -0.989826814
[250,]  0.53716228 -0.849919385
[251,]  0.56584540 -0.834063863
[252,]  0.62490066 -0.859167663
[253,]  0.51772697 -0.892416167
[254,]  0.54584880 -0.844571935
[255,]  0.56184511 -0.735227218
[256,]  0.58087834 -0.837429703
[257,]  0.59806809 -0.904019084
[258,]  0.61808018 -0.733650658
[259,]  0.72113816 -0.785813725
[260,]  0.63006478 -0.772439599
[261,]  0.66113228 -0.793478526
[262,]  0.72846391 -0.719327590
[263,]  0.76706281 -0.668307759
[264,]  0.68688977 -0.717601215
[265,]  0.71443960 -0.703114955
[266,]  0.78004465 -0.602198915
[267,]  0.81843592 -0.653366701
[268,]  0.76833337 -0.632661647
[269,]  0.72238817 -0.639353129
[270,]  0.89198723 -0.546169830
[271,]  0.89056945 -0.623765781
[272,]  0.79521821 -0.514202927
[273,]  0.83903489 -0.498742218
[274,]  0.76549191 -0.544529646
[275,]  0.89274917 -0.460619178
[276,]  0.95529383 -0.435368674
[277,]  0.80283710 -0.437377654
[278,]  0.85535407 -0.346160841
[279,]  0.87150744 -0.526565990
[280,]  0.87834183 -0.467549301
[281,]  0.81916065 -0.458802187
[282,]  0.95389028 -0.362091841
[283,]  0.85985647 -0.271579305
[284,]  0.94238447 -0.247095282
[285,]  0.98005209 -0.286606728
[286,]  0.94683909 -0.246981471
[287,]  1.00726997 -0.277923125
[288,]  0.96687655 -0.226874713
[289,]  0.94084164 -0.211044168
[290,]  1.01017236 -0.247338417
[291,]  0.96035778 -0.203288574
[292,]  1.07443844 -0.174619464
[293,]  0.98821513 -0.077364055
[294,]  1.03464939 -0.178019354
[295,]  1.00470633 -0.210944162
[296,]  0.84604322 -0.045824201
[297,]  0.92969456 -0.104019403
[298,]  0.97790591 -0.063961878
[299,]  1.01161791  0.024152299
[300,]  0.88286384 -0.038154313

$y
  [1] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 [38] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 [75] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[112] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[149] 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[186] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[223] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[260] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[297] 1 1 1 1

> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.617 0.033 0.651 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
